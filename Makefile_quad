PROG =	test_quad

SRCS =	integral.f90 negf_env_types.f90 sancho_method.f90 \
        matrix_types.f90 test_quad.f90\
	base/base_hooks.f90 base/kinds.f90 base/machine.f90 \
	base/machine_internal.f90 test_utils.f90 common/mathconstants.f90

OBJS =	integral.o negf_env_types.o sancho_method.o \
        matrix_types.o test_quad.o\
	base/base_hooks.o base/kinds.o base/machine.o \
	base/machine_internal.o test_utils.o common/mathconstants.o

#LIBS = -framework Accelerate

LIBS = /usr/lib/liblapack.so.3gf /usr/lib/libblas.so.3gf

#ln -s /usr/lib/liblapack.so.3gf  /usr/lib/liblapack.so
#ln -s /usr/lib/libblas.so.3gf  /usr/lib/libblas.so
#LDFLAGS = -L/usr/lib -Wl,-rpath=/usr/lib
#LIBS = -lblas llapack

CC = gcc
CFLAGS = -cpp -g 
FC = gfortran
FFLAGS =  -cpp -g -O0
F90 = gfortran
F90FLAGS =  -cpp -g -O0
LDFLAGS =

all: $(PROG)

$(PROG): $(OBJS)
	$(F90) $(F90FLAGS) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)

clean:
	rm -f $(PROG) $(OBJS) *.mod

$(OBJS): %.o : %.f90
	$(F90) $(F90FLAGS) -c $< -o $@

test_quad.o:             integral.o negf_env_types.o sancho_method.o \
                         matrix_types.o base/kinds.o test_utils.o \
                         common/mathconstants.o
integral.o:              negf_env_types.o matrix_types.o base/kinds.o \
                         common/mathconstants.o
negf_env_types.o:        matrix_types.o base/kinds.o common/mathconstants.o
sancho_method.o:         matrix_types.o base/kinds.o
matrix_types.o:          base/kinds.o base/machine.o base/base_uses.f90 \
                         base/base_hooks.o
negf_env_types.o:        base/kinds.o matrix_types.o base/base_uses.f90 \
                         base/base_hooks.o
base/base_hooks.o:       base/kinds.o base/machine.o
base/machine.o:          base/kinds.o base/machine_internal.o
base/machine_internal.o: base/machine_posix.f90
